name: BUILD IMAGE FROM TEMPLATE

on:
  workflow_dispatch:
    inputs:
      path:
        description: Full path of a branch where the config can be found.
        required: false
      image:
        description: The full name of a wallet. Example - bitcoin, dash, blocknet.
        required: true
      version:
        description: Tag or version of an image, please check manifest.json. By default it takes the newest version.
        required: false
        default: latest

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      run: echo ${{ secrets.docker_password }} | docker login --username ${{ secrets.docker_username }} --password-stdin

    # Build images
    - name: INFO BUILD
      run: echo ${{ github.event.inputs.branch }} ${{ github.event.inputs.image }} ${{ github.event.inputs.version }}
    - name: generate a Dockerfile
      run: ./ci.sh generate "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "${{ github.event.inputs.path }}"
    - name: build an image
      run: ./ci.sh build "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}"
    - name: Run a container
      run: ./ci.sh run "${{ github.event.inputs.image }}" ${{ github.event.inputs.version }}
    - name: Test build
      run: ./ci.sh test "${{ github.event.inputs.image }}" ${{ github.event.inputs.version }}
    - name: Remove a container
      run: ./ci.sh clean "${{ github.event.inputs.image }}" ${{ github.event.inputs.version }}
    - name: Remove dangling images
      if: ${{ always() }}
      run: yes | docker image prune
    - name: Push an image to DockerHub
      run: ./ci.sh push "${{ github.event.inputs.image }}" ${{ github.event.inputs.version }}

#  staging:
#    if: ${{ github.event.pull_request }}
#    needs: build
#    runs-on: self-hosted
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Test new image
#      run: echo "Some test"
